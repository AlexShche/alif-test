{"version":3,"file":"static/js/423.da320c68.chunk.js","mappings":"yMAOQA,EAASC,EAAAA,EAAAA,KAmBjB,EAjBkD,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OAC3CC,EAAgCD,EAAhCC,GAAIC,EAA4BF,EAA5BE,IAAKC,EAAuBH,EAAvBG,KAAMC,EAAiBJ,EAAjBI,aACjBC,GAAWC,EAAAA,EAAAA,MAMjB,OACEC,EAAAA,EAAAA,MAACT,EAAAA,EAAI,CAACU,QALQ,WACdH,EAAS,WAADI,OAAYR,GACtB,EAG0BS,WAAS,EAACC,OAAOC,EAAAA,EAAAA,KAAA,OAAKC,IAAI,OAAOC,IAAKZ,IAAQa,SAAA,EACpEH,EAAAA,EAAAA,KAACI,EAAAA,EAAS,CAACC,KAAMb,KACjBQ,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAACf,EAAI,CAACqB,MAAOf,MAGnB,E,oBCvBA,EAA0B,uBCsB1B,EAfwB,WACtB,IAAMgB,GAAWC,EAAAA,EAAAA,KACTC,GAAYC,EAAAA,EAAAA,IAAe,SAACC,GAAK,OAAKA,EAAMF,OAAO,IAAnDA,QAMR,OAJAG,EAAAA,EAAAA,YAAU,WACRL,GAASM,EAAAA,EAAAA,MACX,GAAG,KAGDb,EAAAA,EAAAA,KAAA,OAAKc,UAAWC,EAAeZ,UAC7BH,EAAAA,EAAAA,KAACgB,EAAc,CAAC5B,OAAQqB,EAAQ,MAGtC,EClBaQ,EAAW,WACtB,OACEtB,EAAAA,EAAAA,MAAA,OAAKmB,UAAU,YAAWX,SAAA,EACxBH,EAAAA,EAAAA,KAAA,MAAAG,SAAI,2FACJH,EAAAA,EAAAA,KAACkB,EAAW,MAGlB,C,oICRaC,E,QAAMC,EAAAA,OAAa,CAC9BC,QAASC,+D,oBCIET,EAAa,WAAH,OAAS,SAACN,GAC/BY,EAAAA,IACO,YACJI,MAAK,SAACC,GACLC,QAAQC,IAAI,CAAEF,IAAAA,GAChB,IACCG,OAAM,SAACC,GACNH,QAAQC,IAAI,CAAEE,EAAAA,GAChB,GACJ,CAAE,EAEWC,EAAe,SAACC,GAA8B,OAAK,WAC9DX,EAAAA,KACQ,WAAYW,GACjBP,MAAK,WACJQ,EAAAA,EAAAA,KAAa,IACf,IACCJ,OAAM,SAACC,GACNH,QAAQC,IAAI,CAAEE,EAAAA,GAChB,GACJ,CAAE,EAEWI,EACX,SAACF,GAA8B,OAAK,SAACvB,GACnCY,EAAAA,IACO,WAAYW,GAChBP,MAAK,WACJQ,EAAAA,EAAAA,KAAa,IACf,IACCJ,OAAM,SAACC,GACNH,QAAQC,IAAI,CAAEE,EAAAA,GAChB,GACJ,CAAE,EAESK,EACX,SAACC,GAAgB,OAAK,SAAC3B,GACrB,GAAI2B,EAASC,SAAS,QACpB,OAAO5B,EAAS6B,EAAAA,EAAAA,QAAAA,qBAAyC,IAC3D7B,EAAS6B,EAAAA,EAAAA,QAAAA,qBAAyC,GACpD,CAAE,C,4FC3CS5B,EAAiB,WAAH,OAAS6B,EAAAA,EAAAA,KAA2B,EAClD3B,EAAoD4B,EAAAA,E,uDCHjE,MAAwB,qB,SCOxB,EAJuC,SAAHnD,GAAkB,IAAZkB,EAAIlB,EAAJkB,KACxC,OAAOV,EAAAA,EAAAA,MAAA,OAAKmB,UAAWC,EAAaZ,SAAA,CAAEE,EAAK,WAC7C,C","sources":["shared/ui/RecipeCardItem/index.tsx","webpack://alif-test/./src/shared/ui/RecipesList/style.module.css?987f","shared/ui/RecipesList/index.tsx","pages/Main/index.tsx","redux/api.ts","redux/actions/recipes.ts","shared/hooks/redux.ts","webpack://alif-test/./src/shared/ui/TimeBadge/style.module.css?74f4","shared/ui/TimeBadge/index.tsx"],"sourcesContent":["import { FC } from 'react';\nimport { Card } from 'antd';\nimport { useNavigate } from 'react-router-dom';\n\nimport { TRecipesCardItemProps } from './types';\nimport TimeBadge from '../TimeBadge';\n\nconst { Meta } = Card;\n\nconst RecipeCardItem: FC<TRecipesCardItemProps> = ({ recipe }) => {\n  const { id, img, name, cooking_time } = recipe;\n  const navigate = useNavigate();\n\n  const onClick = () => {\n    navigate(`/recipe/${id}`);\n  };\n\n  return (\n    <Card onClick={onClick} hoverable cover={<img alt=\"dish\" src={img} />}>\n      <TimeBadge time={cooking_time} />\n      <div></div>\n      <Meta title={name} />\n    </Card>\n  );\n};\n\nexport default RecipeCardItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"style_wrapper__lnbI5\"};","import { FC, useEffect } from 'react';\n\nimport RecipeCardItem from '../RecipeCardItem';\nimport { getRecipes } from '../../../redux/actions/recipes';\nimport { useAppDispatch, useAppSelector } from '../../hooks/redux';\n\nimport styles from './style.module.css';\n\nconst RecipesList: FC = () => {\n  const dispatch = useAppDispatch();\n  const { recipes } = useAppSelector((state) => state.recipes);\n\n  useEffect(() => {\n    dispatch(getRecipes());\n  }, []);\n\n  return (\n    <div className={styles.wrapper}>\n      <RecipeCardItem recipe={recipes[0]} />\n    </div>\n  );\n};\n\nexport default RecipesList;\n","import { FC } from 'react';\nimport RecipesList from '../../shared/ui/RecipesList';\n\nexport const Main: FC = () => {\n  return (\n    <div className='container'>\n      <h1>Список рецептов</h1>\n      <RecipesList />\n    </div>\n  );\n};\n","import axios from 'axios';\n\nexport const api = axios.create({\n  baseURL: process.env.REACT_APP_API_ROOT,\n});","import { AppDispatch } from '../store';\nimport { api } from '../api';\nimport { IGetRecipesResponse } from '../../shared/types/recipes';\nimport { TManageRecipeFormFields } from '../../shared/ui/ManageRecipeForm/types';\nimport { recipesSlice } from '../reducers/recipes';\nimport { history } from '../../index';\n\nexport const getRecipes = () => (dispatch: AppDispatch) => {\n  api\n    .get('/recipes')\n    .then((res: IGetRecipesResponse) => {\n      console.log({ res });\n    })\n    .catch((e) => {\n      console.log({ e });\n    });\n};\n\nexport const createRecipe = (input: TManageRecipeFormFields) => () => {\n  api\n    .post('/recipes', input)\n    .then(() => {\n      history.push('/');\n    })\n    .catch((e) => {\n      console.log({ e });\n    });\n};\n\nexport const editRecipe =\n  (input: TManageRecipeFormFields) => (dispatch: AppDispatch) => {\n    api\n      .put('/recipes', input)\n      .then(() => {\n        history.push('/');\n      })\n      .catch((e) => {\n        console.log({ e });\n      });\n  };\n\nexport const setIsEditRecipePage =\n  (pathname: string) => (dispatch: AppDispatch) => {\n    if (pathname.includes('edit'))\n      return dispatch(recipesSlice.actions.setIsEditRecipePage(true));\n    dispatch(recipesSlice.actions.setIsEditRecipePage(false));\n  };\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootReducer } from '../../redux/store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootReducer> = useSelector;\n","// extracted by mini-css-extract-plugin\nexport default {\"badge\":\"style_badge__XZ7mw\"};","import { FC } from 'react';\nimport { TTimeBadgeProps } from './types';\nimport styles from './style.module.css';\n\nconst TimeBadge: FC<TTimeBadgeProps> = ({ time }) => {\n  return <div className={styles.badge}>{time}м</div>;\n};\n\nexport default TimeBadge;\n"],"names":["Meta","Card","_ref","recipe","id","img","name","cooking_time","navigate","useNavigate","_jsxs","onClick","concat","hoverable","cover","_jsx","alt","src","children","TimeBadge","time","title","dispatch","useAppDispatch","recipes","useAppSelector","state","useEffect","getRecipes","className","styles","RecipeCardItem","Main","RecipesList","api","axios","baseURL","process","then","res","console","log","catch","e","createRecipe","input","history","editRecipe","setIsEditRecipePage","pathname","includes","recipesSlice","useDispatch","useSelector"],"sourceRoot":""}